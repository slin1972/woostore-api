<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
http://www.springframework.org/schema/mvc  
http://www.springframework.org/schema/mvc/spring-mvc.xsd  
http://www.springframework.org/schema/context  
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/aop   
http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
http://www.springframework.org/schema/tx    
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/cache 
http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<context:component-scan base-package="com.woo.server.service" />
	<context:component-scan base-package="com.woo.server.config" />
	<context:component-scan base-package="com.woo.server.context" />
	<context:component-scan base-package="com.woo.server.dao" />
	<context:component-scan base-package="com.woo.push" />

	<!-- 注入configProperties -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
       <property name="locations">
           <list>
               <value>classpath*:config/api_*.properties</value>
           </list>
       </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>    

	<mvc:annotation-driven></mvc:annotation-driven>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="sheildAppServerJPA" />
	</bean>
	
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes> 
			<tx:method name="add" propagation="REQUIRED"/> 
			<tx:method name="remove" propagation="REQUIRED"/> 
			<tx:method name="delete" propagation="REQUIRED"/> 
			<tx:method name="update" propagation="REQUIRED"/> 
			<tx:method name="*" propagation="SUPPORTS" read-only="true" /> 
		</tx:attributes> 
	</tx:advice> -->

	<jpa:repositories base-package="com.woo.server.dao" />
	<jpa:repositories base-package="com.woo.count.dao" />

	 <bean id="serviceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter"> 
		<property name="service" > <bean class="com.woo.device.sender.Sender"></bean> 
		</property><!--  定义服务名 --> <property name="serviceName" value="Sender" /> <property 
		name="serviceInterface" value="com.woo.device.sender.ISender" /> <property 
		name="registryPort" value="8088" /> </bean> 

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="200000" />
	</bean>
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>

	<!-- jpa dao -->
<!-- 	<jpa:repositories base-package="footmark.springdata.jpa.dao"  >
		<jpa:repository id="accountDao" repository-impl-ref=" accountDaoPlus"  >
			
		</jpa:repository>
	</jpa:repositories>

	<bean id="accountDaoPlus" class="......." /> -->
	
	<!-- Spring 统一日志处理   LogInterceptor拦截器 配置　-->   
	<bean id="logLnterceptor" class="com.woo.web.util.LogInterceptor"/>
	<!-- Spring 统一异常处理  ExceptionAdvisor配置 -->
	<bean id="exceptionHandler" class="com.woo.web.util.ExceptionAdvisor"></bean>
	
	<!-- Bean自动代理处理器 配置-->  
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator" >
	   <property name="beanNames">
	    <list>	<!-- 配置需要进行日志记录的Service和Dao -->
	     	<value>*Dao</value>
	     			<!-- 配置所有Service结尾命名的Bean，即所有Service层的类都要经过exceptionHandler异常处理类 --> 
			<value>*Service</value>  <!-- Service层的Bean ID 命名要以Service结尾 -->
	    </list>
	   </property>
	   <property name="interceptorNames">
	    <list>
		     <value>exceptionHandler</value>
		     <value>logLnterceptor</value>
		     <!--<value>transactionInterceptor</value>-->
	    </list>
	   </property>
	</bean>
<!-- ——————————————————Spring 统一日志处理 + 统一异常处理  配置结束—————————————悲伤的分隔线—————————— -->
</beans> 